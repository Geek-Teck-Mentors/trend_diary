name: Cloudflare Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build
        run: npm run build

      - name: Upload Preview Version to Cloudflare Workers
        id: deploy
        run: |
          # PRÁï™Âè∑„Åã„Çâ„Éó„É¨„Éì„É•„Éº„Ç®„Ç§„É™„Ç¢„Çπ„ÇíÁîüÊàê
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_ALIAS="pr-${PR_NUMBER}"

          # Êñ∞„Åó„ÅÑ„Éê„Éº„Ç∏„Éß„É≥„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÔºàÊú¨Áï™„Éá„Éó„É≠„Ç§„Åó„Å™„ÅÑÔºâ
          npx wrangler versions upload --preview-alias "${PREVIEW_ALIAS}" > deploy-output.txt

          # „Éó„É¨„Éì„É•„ÉºURL„ÇíÊäΩÂá∫
          DEPLOY_URL=$(grep -oP 'https://[^\s]+workers\.dev' deploy-output.txt | head -1)
          echo "deploy_url=${DEPLOY_URL}" >> $GITHUB_OUTPUT

          # „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
          rm deploy-output.txt
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const deployUrl = '${{ steps.deploy.outputs.deploy_url }}';
            const prNumber = context.payload.pull_request.number;
            const commentBody = `## üöÄ Cloudflare Preview Deploy

            „Éó„É¨„Éì„É•„ÉºÁí∞Â¢É„ÅåÊ≠£Â∏∏„Å´„Éá„Éó„É≠„Ç§„Åï„Çå„Åü„ÇàÔºÅ

            **Preview URL:** ${deployUrl}

            ---

            ‚ÑπÔ∏è „Åì„ÅÆ„Éó„É¨„Éì„É•„ÉºÁí∞Â¢É„ÅØÊú¨Áï™„ÅÆDB„Å®API„Å´Êé•Á∂ö„Åó„Å¶„ÅÑ„Çã
            ‚ÑπÔ∏è PR„Åå„ÇØ„É≠„Éº„Ç∫„Åï„Çå„Çã„Å®Ëá™ÂãïÁöÑ„Å´ÂâäÈô§„Åï„Çå„Çã`;

            // Êó¢Â≠ò„ÅÆ„Ç≥„É°„É≥„Éà„ÇíÊ§úÁ¥¢
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('üöÄ Cloudflare Preview Deploy')
            );

            if (botComment) {
              // Êó¢Â≠ò„ÅÆ„Ç≥„É°„É≥„Éà„ÇíÊõ¥Êñ∞
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Êñ∞Ë¶è„Ç≥„É°„É≥„Éà„Çí‰ΩúÊàê
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Delete Preview Alias Deployment
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_ALIAS="pr-${PR_NUMBER}"
          SCRIPT_NAME="trend-diary"

          # „Éó„É¨„Éì„É•„Éº„Ç®„Ç§„É™„Ç¢„Çπ„Å´Èñ¢ÈÄ£„Åô„Çã„Éá„Éó„É≠„Ç§„É°„É≥„Éà„Çí‰∏ÄË¶ßÂèñÂæó
          DEPLOYMENTS=$(curl -s "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/workers/scripts/${SCRIPT_NAME}/deployments" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -H "Content-Type: application/json")

          # „Éó„É¨„Éì„É•„Éº„Ç®„Ç§„É™„Ç¢„Çπ„Å´‰∏ÄËá¥„Åô„Çã„Éá„Éó„É≠„Ç§„É°„É≥„ÉàID„ÇíÊäΩÂá∫
          DEPLOYMENT_ID=$(echo "$DEPLOYMENTS" | jq -r ".result[] | select(.annotations.\"workers/triggered_by\" == \"upload\" and .annotations.\"workers/preview-alias\" == \"${PREVIEW_ALIAS}\") | .id" | head -1)

          if [ -n "$DEPLOYMENT_ID" ] && [ "$DEPLOYMENT_ID" != "null" ]; then
            echo "Deleting deployment: ${DEPLOYMENT_ID} for alias: ${PREVIEW_ALIAS}"

            # „Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÇíÂâäÈô§
            curl -X DELETE "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/workers/scripts/${SCRIPT_NAME}/deployments/${DEPLOYMENT_ID}" \
              -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
              -H "Content-Type: application/json"

            echo "Preview deployment deleted successfully"
          else
            echo "No deployment found for preview alias: ${PREVIEW_ALIAS}"
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
