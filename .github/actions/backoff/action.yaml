name: 'Exponential Backoff'
description: '指数バックオフアルゴリズムを使用したリトライ処理'

inputs:
  command:
    description: '成功を待機するコマンド'
    required: true
  max_retries:
    description: '最大リトライ回数'
    required: false
    default: 10
  base_wait_time:
    description: '初回待機時間（秒）'
    required: false
    default: 1
  max_wait_time:
    description: '最大待機時間（秒）'
    required: false
    default: 30
  fail_command:
    description: 'タイムアウト時に実行するコマンド'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: 指数バックオフ実行
      shell: bash
      run: |
        # パラメータ設定
        COMMAND="${{ inputs.command }}"
        MAX_RETRIES=${{ inputs.max_retries }}
        BASE_WAIT_TIME=${{ inputs.base_wait_time }}
        MAX_WAIT_TIME=${{ inputs.max_wait_time }}
        FAIL_COMMAND="${{ inputs.fail_command }}"

        # 指数バックオフループ
        total_wait=0
        attempt=0

        while [ $attempt -lt $MAX_RETRIES ]; do
          # コマンド実行
          if eval "$COMMAND" > /dev/null 2>&1; then
            echo "コマンド成功 (${total_wait}秒)"
            exit 0
          fi
          
          # 指数バックオフで待機時間を計算 (2^attempt × BASE_WAIT_TIME)
          wait_time=$(( $BASE_WAIT_TIME * 2**$attempt ))
          # 最大待機時間を超えないようにする
          if [ $wait_time -gt $MAX_WAIT_TIME ]; then
            wait_time=$MAX_WAIT_TIME
          fi
          
          attempt=$(( $attempt + 1 ))
          total_wait=$(( $total_wait + $wait_time ))
          
          echo "リトライ待機中... 試行 $attempt/$MAX_RETRIES (${wait_time}秒, 合計 ${total_wait}秒)"
          sleep $wait_time
          
          # 最大リトライ回数に達した場合
          if [ $attempt -eq $MAX_RETRIES ]; then
            echo "タイムアウト (${total_wait}秒経過)"
            
            # 失敗時コマンドが指定されていれば実行
            if [ -n "$FAIL_COMMAND" ]; then
              eval "$FAIL_COMMAND"
            fi
            
            exit 1
          fi
        done
